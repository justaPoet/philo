//+ visualizer : https://nafuka11.github.io/philosophers-visualizer/
//? Pour compiler un programme qui fait usage de cette bibliothèque, il ne faut pas oublier de la lier avec -pthread :
//? exemple : gcc -pthread main.c

//? Si on compile le programme avec les options -fsanitize=thread et -g avant de l’éxecuter, comme ceci :
//? "cc -fsanitize=thread -g threads.c && ./a.out", on nous avertira bien avec un “WARNING: ThreadSanitizer: data race”.

//* PROG REUSSI QUAND : Tous les philosophes ont manges autant de fois precises en arg
//! MAIS PROBLEME 1 : Risque de DATARACE (// thread qui fini  son travail plus tot que voulu et altere les valeurs necessaire dans le script d'un autre thread)
//! MAIS PROBLEME 2 : Risque de DEADLOCK (// acces impossible des forks/spoons par un philo car bloque definitivement par un autre == oblige de kill)
//* ==> SOLUTION : Chaque "philosopher" doit demander la permission au "waiter" pour manger + priorite pour celui qui a manger il y a longtemps









// possibilite de preciser des couleurs dans les args de printf